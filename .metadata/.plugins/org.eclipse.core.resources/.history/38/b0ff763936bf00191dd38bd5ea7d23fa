package com.potaly.security.core.validate.code;

import java.io.IOException;

import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletResponse;

import org.apache.catalina.servlet4preview.http.HttpServletRequest;
import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.web.authentication.AuthenticationFailureHandler;
import org.springframework.web.context.request.ServletWebRequest;
import org.springframework.web.filter.OncePerRequestFilter;

import com.potaly.security.core.properties.SecurityProperties;

/**
 * 在security的过滤器链上加入自己定义的过滤器，用来验证验证码，加在UsernamePasswordAuthenticationFilter
 * 之前
 * @author wang.qiang
 * @date 2019年8月15日
 */
public class ValidateCodeFilter extends OncePerRequestFilter {

	/**
	 * 验证码校验失败处理器
	 */
	@Autowired
	private AuthenticationFailureHandler authenticationFailureHandler;
	/**
	 * 系统配置信息
	 */
	@Autowired
	private SecurityProperties securityProperties;
	/**
	 * 系统中的校验码处理器
	 */
	//@Autowired
	//private ValidateCodeProcessorHolder validateCodeProcessorHolder;
  

	@Override
	protected void doFilterInternal(javax.servlet.http.HttpServletRequest request, HttpServletResponse response,
			FilterChain filterChain) throws ServletException, IOException {
		if(StringUtils.equals("/authentication/form", request.getRequestURI())&&
				StringUtils.equalsIgnoreCase(request.getMethod(), "post")) {
			
			try {
				validate(new ServletWebRequest(request));
			} catch (ValidateCodeException e) {
				authenticationFailureHandler.onAuthenticationFailure(request, response, e);
			}
			
		}
		filterChain.doFilter(request, response);
	}
	private void validate(ServletWebRequest servletWebRequest) {
		// TODO Auto-generated method stub
		
	}

}
